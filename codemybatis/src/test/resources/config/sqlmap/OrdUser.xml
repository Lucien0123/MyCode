<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="test">

    <!-- id:statement的id 或者叫做sql的id-->
    <!-- parameterType:声明输入参数的类型 -->
    <!-- resultType:声明输出结果的类型，应该填写pojo的全路径 -->
    <!-- #{}：输入参数的占位符，相当于jdbc的？ -->
    <select id="queryUserById" parameterType="int" resultType="com.cui.mybatis.dataobject.OrdUser">
        SELECT * FROM `ORD_USER` WHERE id  = #{id}
    </select>

    <!-- 如果返回多个结果，mybatis会自动把返回的结果放在list容器中 -->
    <!-- resultType的配置和返回一个结果的配置一样 -->
    <select id="queryUserByUsername" parameterType="string"
            resultType="com.cui.mybatis.dataobject.OrdUser">
        SELECT * FROM `ORD_USER` WHERE username LIKE #{username}
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="com.cui.mybatis.dataobject.OrdUser">
        INSERT INTO `ORD_USER`(uuid,username,mobile,open_Id)
        VALUES
        (#{uuid},#{username},#{mobile},#{openId})
    </insert>

    <!-- 保存用户并返回自增主键id -->
    <insert id="saveUserReturnKey" parameterType="com.cui.mybatis.dataobject.OrdUser">
        <!-- selectKey 标签实现主键返回 -->
        <!-- keyColumn:主键对应的表中的哪一列 -->
        <!-- keyProperty：主键对应的pojo中的哪一个属性 -->
        <!-- order：设置在执行insert语句之前还是之后执行查询id的sql,如果使用程序中的自定义主键，如uuid，则可使用before，现获取id再关联其他数据，按需来 -->
        <!-- resultType：设置返回的id的类型 -->
        <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `ORD_USER`(uuid,username,mobile,open_Id)
        VALUES
        (#{uuid},#{username},#{mobile},#{openId})
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.cui.mybatis.dataobject.OrdUser">
        UPDATE `ORD_USER` SET
        mobile=#{mobile}
        WHERE username=#{username}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUserById" parameterType="int">
        delete from ORD_USER where
        id=#{id}
    </delete>


</mapper>
